[12-05-2014:0015]
	Perfect with switching in both way .... 
	Tested with 10 times switching in noth way
	Tested with 3 VMs with 2 VFs and switch all around
	Todo: 
	{minor} Add a show status kinda thing to show which VM are having VFs now
	{major} Most probably one bug is there in iperf -c inside vm, solve that
	{major} Performance improvement

[09-05-2014:2038]
	Changes done to introduce a single structure to keep all data
	Crash on iperf -c in vm
	Next do introduce a queue and keep the struct there...
	For any problme better switch back to 8-th May version that is stable one
	

[08-05-2014:2200]
	NO Crash "Almost"
	Skb queueing and sending in batch to frontend 
	TO DO : Switch	

[07-05-2014:1334]
	NO crash
	Most of the bug solved
	TODO:
	Garbage collect of the pages-> map rebuild for pfn to mfn
	Switch technique

[05-05-2014:2230] 
	Memory bug resolved ... Good thing
	how? page are resolved... so the broken mapping from pfn to mfn is not doing any
	problem...
	still one bug is there.. very infrequest bug... occur in vfway_send_path
	todo: 
	1. resovld that bug, mostly occur when in vm iperf -c is running
	2. when releive the vf the mapping from pfn to mfn need to rebuild ... do in the same
	way balooning code is doing ...
[04-05-2014:1453] 
	Bug is still there ..
	also added provision for selecting HW register writing part, switch in netdev.c
	rx_ps_hdr_size = 128 or 0
	for this one #define HD added .. if HD is 0 then it is normal part otherwise
	it would be on rx_ps_hdr_size would be 0
	else 128 .. accodring dma and page_dma, hlen will be changed

[29-4-2014:2339] sysfs file now in place, can set some variable and can print it
	packet flow is ok to and from; both way ping
	git bkp done
	Problem: Kernel crash still present, performance is still bad->300 MBps
	Todo: switch of VF to VM automation,kernel crush remove, performance improvement
